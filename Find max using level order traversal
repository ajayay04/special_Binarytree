#include <iostream>
#include<climits>
#include<queue>
using namespace std;

struct Node{
	int data;
	struct Node* left;
	struct Node* right;

	Node(int val){
		data = val;
		left = NULL;
		right = NULL;
	}
};

int searchInBt(Node* root){

	int max = INT_MIN;

	if(root == NULL)
		return 0;
	
	queue<Node*> q;
	q.push(root);
	

	while(!q.empty()){
		Node* node = q.front();
		q.pop();
		
		if(max < node->data){
			max = node->data;
		}
		if(node->left)
			q.push(node->left);
		if(node->right)
			q.push(node->right);
	}
	return max;
}

int main(){

	struct Node* root = new Node(1);
	root->left = new Node(2);
	root->right = new Node(70);

	root->left->left = new Node(4);
	root->left->right = new Node(10);

	root->right->left = new Node(6);
	root->right->right = new Node(17);

	cout<<"Found element in binary tree : "<<searchInBt(root);
	cout<<endl;

	return 0;
}
